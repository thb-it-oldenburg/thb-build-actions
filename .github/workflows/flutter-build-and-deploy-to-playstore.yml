name: Flutter build and deploy
on:
  workflow_call:
    inputs:
      track:
        type: string
        default: 'internal'
      flutter-version:
        type: string
        default: '3.19.0'
    secrets:
      SERVICE_ACCOUNT_KEY_FILE_CONTENT_BASE64:
        required: true
        description: The Google Service key Json File. Note that the filecontent should be encoded with base64.
      KEYSTORE_INFORMATION_FILE_BASE64:
        description: 'See Readme. Contains stuff that belongs in the file "key.properties". Also base64 encoded.'
      KEYSTORE_SIGNING_KEY_BASE64:
        description: The keystore file containing your private upload key encoded with base 64
        required: true

jobs:
  build-flutter-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Setup Service-Account-Key.json
        run: |
          echo '${{ secrets.SERVICE_ACCOUNT_KEY_FILE_CONTENT_BASE64 }}' | base64 --decode >> Service-Account-Key.json

      - name: Setup key.properties file
        run: |
          echo '${{ secrets.KEYSTORE_INFORMATION_FILE_BASE64 }}' | base64 --decode >> android/key.properties

      - name: Setup keystore
        run: |
          echo '${{ secrets.KEYSTORE_SIGNING_KEY_BASE64 }}' | base64 --decode >> upload-keystore.jks

      - name: Setup flutter
        uses: subosito/flutter-action@v2.13.0
        with:
          flutter-version: ${{ inputs.flutter-version }}

      - name: Setup Java JDK
        uses: actions/setup-java@v4.1.0
        with:
          java-version: '21'
          distribution: adopt

      - name: Setup Ruby, JRuby and TruffleRuby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v3.2.0
        
      - name: list directory
        run: ls

      - name: install fastlane plugins
        run: cd android && bundle install

      - name: Run fastlane to build flutter app and deploy to given track
        run: bundle exec fastlane ${{ inputs.track }}
