name: Create Docker container and push to GitHub registry

on:
  workflow_call:
    inputs:
      container-tag:
        type: string
      artifact-name:
        type: string
      artifact-path:
        type: string
        default: .
      file-name:
        type: string
        required: false
        description: If given, creates a fileto use freely in the docker build. Content will be secrets.file-content 
    secrets:
      file-content:
        required: false
        description: Necessary if inputs.file-name is given. Must be base64 encoded.

jobs:
  build-push-docker:
    name: Build and push Docker Container
    runs-on: ubuntu-latest

    steps:
      - name: Create User defined secret file
        if: inputs.file-name != ''
        run: |
          echo '${{ secrets.file-content }}' | base64 --decode >> ${{ inputs.file-name }}
      
      - name: Download Artifact
        if: inputs.artifact-name != ''
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}

      - name: Checkout Repository
        if: inputs.artifact-name == ''
        uses: actions/checkout@v4

      - name: List current directory
        run: ls
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create file with GitHub Token for Dockerfile build
        run: |
          cat <<- EOF > github_token.txt
          ${{ secrets.GITHUB_TOKEN }}
          EOF

      - name: Build Container image with extra tag and latest
        if: inputs.container-tag != ''
        run: docker build --secret id=github_token,src=./github_token.txt -t ghcr.io/${GITHUB_REPOSITORY}:${{ inputs.container-tag }} -t ghcr.io/${GITHUB_REPOSITORY}:latest ${{ inputs.artifact-path }} # Im Pfad am Ende muss das Dockerfile liegen

      - name: Build Container image as latest
        if: inputs.container-tag == ''
        run: docker build --secret id=github_token,src=./github_token.txt -t ghcr.io/${GITHUB_REPOSITORY}:latest ${{ inputs.artifact-path }} # Im Pfad am Ende muss das Dockerfile liegen

      - name: Push image to DockerHub
        run: docker push ghcr.io/${GITHUB_REPOSITORY} --all-tags
